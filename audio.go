// Code generated by internal/generator.go. DO NOT EDIT.

package mimetype

const (
	// Audio1dInterleavedParityfec 1d-interleaved-parityfec mime type.
	Audio1dInterleavedParityfec = "audio/1d-interleaved-parityfec"
	// Audio32kadpcm 32kadpcm mime type.
	Audio32kadpcm = "audio/32kadpcm"
	// Audio3gpp 3gpp mime type.
	Audio3gpp = "audio/3gpp"
	// Audio3gpp2 3gpp2 mime type.
	Audio3gpp2 = "audio/3gpp2"
	// AudioAac aac mime type.
	AudioAac = "audio/aac"
	// AudioAc3 ac3 mime type.
	AudioAc3 = "audio/ac3"
	// AudioAmr AMR mime type.
	AudioAmr = "audio/AMR"
	// AudioAmrWb AMR-WB mime type.
	AudioAmrWb = "audio/AMR-WB"
	// AudioAmrWbPlus amr-wb+ mime type.
	AudioAmrWbPlus = "audio/amr-wb+"
	// AudioAptx aptx mime type.
	AudioAptx = "audio/aptx"
	// AudioAsc asc mime type.
	AudioAsc = "audio/asc"
	// AudioAtracAdvancedLossless ATRAC-ADVANCED-LOSSLESS mime type.
	AudioAtracAdvancedLossless = "audio/ATRAC-ADVANCED-LOSSLESS"
	// AudioAtracX ATRAC-X mime type.
	AudioAtracX = "audio/ATRAC-X"
	// AudioAtrac3 ATRAC3 mime type.
	AudioAtrac3 = "audio/ATRAC3"
	// AudioBasic basic mime type.
	AudioBasic = "audio/basic"
	// AudioBv16 BV16 mime type.
	AudioBv16 = "audio/BV16"
	// AudioBv32 BV32 mime type.
	AudioBv32 = "audio/BV32"
	// AudioClearmode clearmode mime type.
	AudioClearmode = "audio/clearmode"
	// AudioCn CN mime type.
	AudioCn = "audio/CN"
	// AudioDat12 DAT12 mime type.
	AudioDat12 = "audio/DAT12"
	// AudioDls dls mime type.
	AudioDls = "audio/dls"
	// AudioDsrEs201108 dsr-es201108 mime type.
	AudioDsrEs201108 = "audio/dsr-es201108"
	// AudioDsrEs202050 dsr-es202050 mime type.
	AudioDsrEs202050 = "audio/dsr-es202050"
	// AudioDsrEs202211 dsr-es202211 mime type.
	AudioDsrEs202211 = "audio/dsr-es202211"
	// AudioDsrEs202212 dsr-es202212 mime type.
	AudioDsrEs202212 = "audio/dsr-es202212"
	// AudioDv DV mime type.
	AudioDv = "audio/DV"
	// AudioDvi4 DVI4 mime type.
	AudioDvi4 = "audio/DVI4"
	// AudioEac3 eac3 mime type.
	AudioEac3 = "audio/eac3"
	// AudioEncaprtp encaprtp mime type.
	AudioEncaprtp = "audio/encaprtp"
	// AudioEvrc EVRC mime type.
	AudioEvrc = "audio/EVRC"
	// AudioEvrcQcp EVRC-QCP mime type.
	AudioEvrcQcp = "audio/EVRC-QCP"
	// AudioEvrc0 EVRC0 mime type.
	AudioEvrc0 = "audio/EVRC0"
	// AudioEvrc1 EVRC1 mime type.
	AudioEvrc1 = "audio/EVRC1"
	// AudioEvrcb EVRCB mime type.
	AudioEvrcb = "audio/EVRCB"
	// AudioEvrcb0 EVRCB0 mime type.
	AudioEvrcb0 = "audio/EVRCB0"
	// AudioEvrcb1 EVRCB1 mime type.
	AudioEvrcb1 = "audio/EVRCB1"
	// AudioEvrcnw EVRCNW mime type.
	AudioEvrcnw = "audio/EVRCNW"
	// AudioEvrcnw0 EVRCNW0 mime type.
	AudioEvrcnw0 = "audio/EVRCNW0"
	// AudioEvrcnw1 EVRCNW1 mime type.
	AudioEvrcnw1 = "audio/EVRCNW1"
	// AudioEvrcwb EVRCWB mime type.
	AudioEvrcwb = "audio/EVRCWB"
	// AudioEvrcwb0 EVRCWB0 mime type.
	AudioEvrcwb0 = "audio/EVRCWB0"
	// AudioEvrcwb1 EVRCWB1 mime type.
	AudioEvrcwb1 = "audio/EVRCWB1"
	// AudioEvs EVS mime type.
	AudioEvs = "audio/EVS"
	// AudioExample example mime type.
	AudioExample = "audio/example"
	// AudioFlexfec flexfec mime type.
	AudioFlexfec = "audio/flexfec"
	// AudioFwdred fwdred mime type.
	AudioFwdred = "audio/fwdred"
	// AudioG7110 G711-0 mime type.
	AudioG7110 = "audio/G711-0"
	// AudioG719 G719 mime type.
	AudioG719 = "audio/G719"
	// AudioG7221 G7221 mime type.
	AudioG7221 = "audio/G7221"
	// AudioG722 G722 mime type.
	AudioG722 = "audio/G722"
	// AudioG723 G723 mime type.
	AudioG723 = "audio/G723"
	// AudioG72616 G726-16 mime type.
	AudioG72616 = "audio/G726-16"
	// AudioG72624 G726-24 mime type.
	AudioG72624 = "audio/G726-24"
	// AudioG72632 G726-32 mime type.
	AudioG72632 = "audio/G726-32"
	// AudioG72640 G726-40 mime type.
	AudioG72640 = "audio/G726-40"
	// AudioG728 G728 mime type.
	AudioG728 = "audio/G728"
	// AudioG729 G729 mime type.
	AudioG729 = "audio/G729"
	// AudioG7291 G7291 mime type.
	AudioG7291 = "audio/G7291"
	// AudioG729D G729D mime type.
	AudioG729D = "audio/G729D"
	// AudioG729E G729E mime type.
	AudioG729E = "audio/G729E"
	// AudioGsm GSM mime type.
	AudioGsm = "audio/GSM"
	// AudioGsmEfr GSM-EFR mime type.
	AudioGsmEfr = "audio/GSM-EFR"
	// AudioGsmHr08 GSM-HR-08 mime type.
	AudioGsmHr08 = "audio/GSM-HR-08"
	// AudioILbc iLBC mime type.
	AudioILbc = "audio/iLBC"
	// AudioIPMrV25 ip-mr_v2.5 mime type.
	AudioIPMrV25 = "audio/ip-mr_v2.5"
	// AudioL8 L8 mime type.
	AudioL8 = "audio/L8"
	// AudioL16 L16 mime type.
	AudioL16 = "audio/L16"
	// AudioL20 L20 mime type.
	AudioL20 = "audio/L20"
	// AudioL24 L24 mime type.
	AudioL24 = "audio/L24"
	// AudioLpc LPC mime type.
	AudioLpc = "audio/LPC"
	// AudioMatroska matroska mime type.
	AudioMatroska = "audio/matroska"
	// AudioMelp MELP mime type.
	AudioMelp = "audio/MELP"
	// AudioMelp600 MELP600 mime type.
	AudioMelp600 = "audio/MELP600"
	// AudioMelp1200 MELP1200 mime type.
	AudioMelp1200 = "audio/MELP1200"
	// AudioMelp2400 MELP2400 mime type.
	AudioMelp2400 = "audio/MELP2400"
	// AudioMhas mhas mime type.
	AudioMhas = "audio/mhas"
	// AudioMobileXmf mobile-xmf mime type.
	AudioMobileXmf = "audio/mobile-xmf"
	// AudioMpa MPA mime type.
	AudioMpa = "audio/MPA"
	// AudioMp4 mp4 mime type.
	AudioMp4 = "audio/mp4"
	// AudioMp4ALatm MP4A-LATM mime type.
	AudioMp4ALatm = "audio/MP4A-LATM"
	// AudioMpaRobust mpa-robust mime type.
	AudioMpaRobust = "audio/mpa-robust"
	// AudioMpeg mpeg mime type.
	AudioMpeg = "audio/mpeg"
	// AudioMpeg4Generic mpeg4-generic mime type.
	AudioMpeg4Generic = "audio/mpeg4-generic"
	// AudioOgg ogg mime type.
	AudioOgg = "audio/ogg"
	// AudioOpus opus mime type.
	AudioOpus = "audio/opus"
	// AudioParityfec parityfec mime type.
	AudioParityfec = "audio/parityfec"
	// AudioPcma PCMA mime type.
	AudioPcma = "audio/PCMA"
	// AudioPcmaWb PCMA-WB mime type.
	AudioPcmaWb = "audio/PCMA-WB"
	// AudioPcmu PCMU mime type.
	AudioPcmu = "audio/PCMU"
	// AudioPcmuWb PCMU-WB mime type.
	AudioPcmuWb = "audio/PCMU-WB"
	// AudioPrsSid prs.sid mime type.
	AudioPrsSid = "audio/prs.sid"
	// AudioQcelp QCELP mime type.
	AudioQcelp = "audio/QCELP"
	// AudioRaptorfec raptorfec mime type.
	AudioRaptorfec = "audio/raptorfec"
	// AudioRed RED mime type.
	AudioRed = "audio/RED"
	// AudioRtpEncAescm128 rtp-enc-aescm128 mime type.
	AudioRtpEncAescm128 = "audio/rtp-enc-aescm128"
	// AudioRtploopback rtploopback mime type.
	AudioRtploopback = "audio/rtploopback"
	// AudioRtpMidi rtp-midi mime type.
	AudioRtpMidi = "audio/rtp-midi"
	// AudioRtx rtx mime type.
	AudioRtx = "audio/rtx"
	// AudioScip scip mime type.
	AudioScip = "audio/scip"
	// AudioSmv SMV mime type.
	AudioSmv = "audio/SMV"
	// AudioSmv0 SMV0 mime type.
	AudioSmv0 = "audio/SMV0"
	// AudioSmvQcp SMV-QCP mime type.
	AudioSmvQcp = "audio/SMV-QCP"
	// AudioSofa sofa mime type.
	AudioSofa = "audio/sofa"
	// AudioSpMidi sp-midi mime type.
	AudioSpMidi = "audio/sp-midi"
	// AudioSpeex speex mime type.
	AudioSpeex = "audio/speex"
	// AudioT140c t140c mime type.
	AudioT140c = "audio/t140c"
	// AudioT38 t38 mime type.
	AudioT38 = "audio/t38"
	// AudioTelephoneEvent telephone-event mime type.
	AudioTelephoneEvent = "audio/telephone-event"
	// AudioTetraAcelp TETRA_ACELP mime type.
	AudioTetraAcelp = "audio/TETRA_ACELP"
	// AudioTetraAcelpBb TETRA_ACELP_BB mime type.
	AudioTetraAcelpBb = "audio/TETRA_ACELP_BB"
	// AudioTone tone mime type.
	AudioTone = "audio/tone"
	// AudioTsvcis TSVCIS mime type.
	AudioTsvcis = "audio/TSVCIS"
	// AudioUemclip UEMCLIP mime type.
	AudioUemclip = "audio/UEMCLIP"
	// AudioUlpfec ulpfec mime type.
	AudioUlpfec = "audio/ulpfec"
	// AudioUsac usac mime type.
	AudioUsac = "audio/usac"
	// AudioVdvi VDVI mime type.
	AudioVdvi = "audio/VDVI"
	// AudioVmrWb VMR-WB mime type.
	AudioVmrWb = "audio/VMR-WB"
	// AudioVnd3gppIufp vnd.3gpp.iufp mime type.
	AudioVnd3gppIufp = "audio/vnd.3gpp.iufp"
	// AudioVnd4Sb vnd.4SB mime type.
	AudioVnd4Sb = "audio/vnd.4SB"
	// AudioVndAudiokoz vnd.audiokoz mime type.
	AudioVndAudiokoz = "audio/vnd.audiokoz"
	// AudioVndCelp vnd.CELP mime type.
	AudioVndCelp = "audio/vnd.CELP"
	// AudioVndCiscoNse vnd.cisco.nse mime type.
	AudioVndCiscoNse = "audio/vnd.cisco.nse"
	// AudioVndCmlesRadioEvents vnd.cmles.radio-events mime type.
	AudioVndCmlesRadioEvents = "audio/vnd.cmles.radio-events"
	// AudioVndCnsAnp1 vnd.cns.anp1 mime type.
	AudioVndCnsAnp1 = "audio/vnd.cns.anp1"
	// AudioVndCnsInf1 vnd.cns.inf1 mime type.
	AudioVndCnsInf1 = "audio/vnd.cns.inf1"
	// AudioVndDeceAudio vnd.dece.audio mime type.
	AudioVndDeceAudio = "audio/vnd.dece.audio"
	// AudioVndDigitalWinds vnd.digital-winds mime type.
	AudioVndDigitalWinds = "audio/vnd.digital-winds"
	// AudioVndDlnaAdts vnd.dlna.adts mime type.
	AudioVndDlnaAdts = "audio/vnd.dlna.adts"
	// AudioVndDolbyHeaac1 vnd.dolby.heaac.1 mime type.
	AudioVndDolbyHeaac1 = "audio/vnd.dolby.heaac.1"
	// AudioVndDolbyHeaac2 vnd.dolby.heaac.2 mime type.
	AudioVndDolbyHeaac2 = "audio/vnd.dolby.heaac.2"
	// AudioVndDolbyMlp vnd.dolby.mlp mime type.
	AudioVndDolbyMlp = "audio/vnd.dolby.mlp"
	// AudioVndDolbyMps vnd.dolby.mps mime type.
	AudioVndDolbyMps = "audio/vnd.dolby.mps"
	// AudioVndDolbyPl2 vnd.dolby.pl2 mime type.
	AudioVndDolbyPl2 = "audio/vnd.dolby.pl2"
	// AudioVndDolbyPl2x vnd.dolby.pl2x mime type.
	AudioVndDolbyPl2x = "audio/vnd.dolby.pl2x"
	// AudioVndDolbyPl2z vnd.dolby.pl2z mime type.
	AudioVndDolbyPl2z = "audio/vnd.dolby.pl2z"
	// AudioVndDolbyPulse1 vnd.dolby.pulse.1 mime type.
	AudioVndDolbyPulse1 = "audio/vnd.dolby.pulse.1"
	// AudioVndDra vnd.dra mime type.
	AudioVndDra = "audio/vnd.dra"
	// AudioVndDts vnd.dts mime type.
	AudioVndDts = "audio/vnd.dts"
	// AudioVndDtsHd vnd.dts.hd mime type.
	AudioVndDtsHd = "audio/vnd.dts.hd"
	// AudioVndDtsUhd vnd.dts.uhd mime type.
	AudioVndDtsUhd = "audio/vnd.dts.uhd"
	// AudioVndDvbFile vnd.dvb.file mime type.
	AudioVndDvbFile = "audio/vnd.dvb.file"
	// AudioVndEveradPlj vnd.everad.plj mime type.
	AudioVndEveradPlj = "audio/vnd.everad.plj"
	// AudioVndHnsAudio vnd.hns.audio mime type.
	AudioVndHnsAudio = "audio/vnd.hns.audio"
	// AudioVndLucentVoice vnd.lucent.voice mime type.
	AudioVndLucentVoice = "audio/vnd.lucent.voice"
	// AudioVndMsPlayreadyMediaPya vnd.ms-playready.media.pya mime type.
	AudioVndMsPlayreadyMediaPya = "audio/vnd.ms-playready.media.pya"
	// AudioVndNokiaMobileXmf vnd.nokia.mobile-xmf mime type.
	AudioVndNokiaMobileXmf = "audio/vnd.nokia.mobile-xmf"
	// AudioVndNortelVbk vnd.nortel.vbk mime type.
	AudioVndNortelVbk = "audio/vnd.nortel.vbk"
	// AudioVndNueraEcelp4800 vnd.nuera.ecelp4800 mime type.
	AudioVndNueraEcelp4800 = "audio/vnd.nuera.ecelp4800"
	// AudioVndNueraEcelp7470 vnd.nuera.ecelp7470 mime type.
	AudioVndNueraEcelp7470 = "audio/vnd.nuera.ecelp7470"
	// AudioVndNueraEcelp9600 vnd.nuera.ecelp9600 mime type.
	AudioVndNueraEcelp9600 = "audio/vnd.nuera.ecelp9600"
	// AudioVndOctelSbc vnd.octel.sbc mime type.
	AudioVndOctelSbc = "audio/vnd.octel.sbc"
	// AudioVndPresonusMultitrack vnd.presonus.multitrack mime type.
	AudioVndPresonusMultitrack = "audio/vnd.presonus.multitrack"
	// AudioVndQcelpDeprecatedInFavorOfAudioQcelp vnd.qcelp - DEPRECATED in favor of audio/qcelp mime type.
	AudioVndQcelpDeprecatedInFavorOfAudioQcelp = "audio/vnd.qcelp"
	// AudioVndRhetorex32kadpcm vnd.rhetorex.32kadpcm mime type.
	AudioVndRhetorex32kadpcm = "audio/vnd.rhetorex.32kadpcm"
	// AudioVndRip vnd.rip mime type.
	AudioVndRip = "audio/vnd.rip"
	// AudioVndSealedmediaSoftsealMpeg vnd.sealedmedia.softseal.mpeg mime type.
	AudioVndSealedmediaSoftsealMpeg = "audio/vnd.sealedmedia.softseal.mpeg"
	// AudioVndVmxCvsd vnd.vmx.cvsd mime type.
	AudioVndVmxCvsd = "audio/vnd.vmx.cvsd"
	// AudioVorbis vorbis mime type.
	AudioVorbis = "audio/vorbis"
	// AudioVorbisConfig vorbis-config mime type.
	AudioVorbisConfig = "audio/vorbis-config"
)

// IsAudio checks if the mime types is audio.
func IsAudio(mt string) bool {
	switch mt {
	case "audio/1d-interleaved-parityfec":
		return true
	case "audio/32kadpcm":
		return true
	case "audio/3gpp":
		return true
	case "audio/3gpp2":
		return true
	case "audio/AMR":
		return true
	case "audio/AMR-WB":
		return true
	case "audio/ATRAC-ADVANCED-LOSSLESS":
		return true
	case "audio/ATRAC-X":
		return true
	case "audio/ATRAC3":
		return true
	case "audio/BV16":
		return true
	case "audio/BV32":
		return true
	case "audio/CN":
		return true
	case "audio/DAT12":
		return true
	case "audio/DV":
		return true
	case "audio/DVI4":
		return true
	case "audio/EVRC":
		return true
	case "audio/EVRC-QCP":
		return true
	case "audio/EVRC0":
		return true
	case "audio/EVRC1":
		return true
	case "audio/EVRCB":
		return true
	case "audio/EVRCB0":
		return true
	case "audio/EVRCB1":
		return true
	case "audio/EVRCNW":
		return true
	case "audio/EVRCNW0":
		return true
	case "audio/EVRCNW1":
		return true
	case "audio/EVRCWB":
		return true
	case "audio/EVRCWB0":
		return true
	case "audio/EVRCWB1":
		return true
	case "audio/EVS":
		return true
	case "audio/G711-0":
		return true
	case "audio/G719":
		return true
	case "audio/G722":
		return true
	case "audio/G7221":
		return true
	case "audio/G723":
		return true
	case "audio/G726-16":
		return true
	case "audio/G726-24":
		return true
	case "audio/G726-32":
		return true
	case "audio/G726-40":
		return true
	case "audio/G728":
		return true
	case "audio/G729":
		return true
	case "audio/G7291":
		return true
	case "audio/G729D":
		return true
	case "audio/G729E":
		return true
	case "audio/GSM":
		return true
	case "audio/GSM-EFR":
		return true
	case "audio/GSM-HR-08":
		return true
	case "audio/L16":
		return true
	case "audio/L20":
		return true
	case "audio/L24":
		return true
	case "audio/L8":
		return true
	case "audio/LPC":
		return true
	case "audio/MELP":
		return true
	case "audio/MELP1200":
		return true
	case "audio/MELP2400":
		return true
	case "audio/MELP600":
		return true
	case "audio/MP4A-LATM":
		return true
	case "audio/MPA":
		return true
	case "audio/PCMA":
		return true
	case "audio/PCMA-WB":
		return true
	case "audio/PCMU":
		return true
	case "audio/PCMU-WB":
		return true
	case "audio/QCELP":
		return true
	case "audio/RED":
		return true
	case "audio/SMV":
		return true
	case "audio/SMV-QCP":
		return true
	case "audio/SMV0":
		return true
	case "audio/TETRA_ACELP":
		return true
	case "audio/TETRA_ACELP_BB":
		return true
	case "audio/TSVCIS":
		return true
	case "audio/UEMCLIP":
		return true
	case "audio/VDVI":
		return true
	case "audio/VMR-WB":
		return true
	case "audio/aac":
		return true
	case "audio/ac3":
		return true
	case "audio/amr-wb+":
		return true
	case "audio/aptx":
		return true
	case "audio/asc":
		return true
	case "audio/basic":
		return true
	case "audio/clearmode":
		return true
	case "audio/dls":
		return true
	case "audio/dsr-es201108":
		return true
	case "audio/dsr-es202050":
		return true
	case "audio/dsr-es202211":
		return true
	case "audio/dsr-es202212":
		return true
	case "audio/eac3":
		return true
	case "audio/encaprtp":
		return true
	case "audio/example":
		return true
	case "audio/flexfec":
		return true
	case "audio/fwdred":
		return true
	case "audio/iLBC":
		return true
	case "audio/ip-mr_v2.5":
		return true
	case "audio/matroska":
		return true
	case "audio/mhas":
		return true
	case "audio/mobile-xmf":
		return true
	case "audio/mp4":
		return true
	case "audio/mpa-robust":
		return true
	case "audio/mpeg":
		return true
	case "audio/mpeg4-generic":
		return true
	case "audio/ogg":
		return true
	case "audio/opus":
		return true
	case "audio/parityfec":
		return true
	case "audio/prs.sid":
		return true
	case "audio/raptorfec":
		return true
	case "audio/rtp-enc-aescm128":
		return true
	case "audio/rtp-midi":
		return true
	case "audio/rtploopback":
		return true
	case "audio/rtx":
		return true
	case "audio/scip":
		return true
	case "audio/sofa":
		return true
	case "audio/sp-midi":
		return true
	case "audio/speex":
		return true
	case "audio/t140c":
		return true
	case "audio/t38":
		return true
	case "audio/telephone-event":
		return true
	case "audio/tone":
		return true
	case "audio/ulpfec":
		return true
	case "audio/usac":
		return true
	case "audio/vnd.3gpp.iufp":
		return true
	case "audio/vnd.4SB":
		return true
	case "audio/vnd.CELP":
		return true
	case "audio/vnd.audiokoz":
		return true
	case "audio/vnd.cisco.nse":
		return true
	case "audio/vnd.cmles.radio-events":
		return true
	case "audio/vnd.cns.anp1":
		return true
	case "audio/vnd.cns.inf1":
		return true
	case "audio/vnd.dece.audio":
		return true
	case "audio/vnd.digital-winds":
		return true
	case "audio/vnd.dlna.adts":
		return true
	case "audio/vnd.dolby.heaac.1":
		return true
	case "audio/vnd.dolby.heaac.2":
		return true
	case "audio/vnd.dolby.mlp":
		return true
	case "audio/vnd.dolby.mps":
		return true
	case "audio/vnd.dolby.pl2":
		return true
	case "audio/vnd.dolby.pl2x":
		return true
	case "audio/vnd.dolby.pl2z":
		return true
	case "audio/vnd.dolby.pulse.1":
		return true
	case "audio/vnd.dra":
		return true
	case "audio/vnd.dts":
		return true
	case "audio/vnd.dts.hd":
		return true
	case "audio/vnd.dts.uhd":
		return true
	case "audio/vnd.dvb.file":
		return true
	case "audio/vnd.everad.plj":
		return true
	case "audio/vnd.hns.audio":
		return true
	case "audio/vnd.lucent.voice":
		return true
	case "audio/vnd.ms-playready.media.pya":
		return true
	case "audio/vnd.nokia.mobile-xmf":
		return true
	case "audio/vnd.nortel.vbk":
		return true
	case "audio/vnd.nuera.ecelp4800":
		return true
	case "audio/vnd.nuera.ecelp7470":
		return true
	case "audio/vnd.nuera.ecelp9600":
		return true
	case "audio/vnd.octel.sbc":
		return true
	case "audio/vnd.presonus.multitrack":
		return true
	case "audio/vnd.qcelp":
		return true
	case "audio/vnd.rhetorex.32kadpcm":
		return true
	case "audio/vnd.rip":
		return true
	case "audio/vnd.sealedmedia.softseal.mpeg":
		return true
	case "audio/vnd.vmx.cvsd":
		return true
	case "audio/vorbis":
		return true
	case "audio/vorbis-config":
		return true
	default:
		return false
	}
}
